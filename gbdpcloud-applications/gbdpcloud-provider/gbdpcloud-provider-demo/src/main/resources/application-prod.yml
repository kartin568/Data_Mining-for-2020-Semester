server:
  port: 8101
spring:
  datasource:
    master:
      username: root
      password: Testserver@2020
      url: jdbc:mysql://81.70.7.10:3306/db_test?useSSL=false
      type: com.alibaba.druid.pool.DruidDataSource
      driverClassName: com.mysql.jdbc.Driver
      #监控统计拦截的filters
      filters: stat,wall
      #配置初始化大小/最小/最大
      initial-size: 1
      min-idle: 1
      max-active: 20
      #获取连接等待超时时间
      max-wait: 60000
      #间隔多久进行一次检测，检测需要关闭的空闲连接
      time-between-eviction-runs-millis: 60000
      #一个连接在池中最小生存的时间
      min-evictable-idle-time-millis: 300000
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      #打开PSCache，并指定每个连接上PSCache的大小。oracle设为true，mysql设为false。分库分表较多推荐设置为false
      pool-prepared-statements: false
      max-pool-prepared-statement-per-connection-size: 20
      validation-query: SELECT 1 FROM DUAL
    slave:
      username: root
      password: Testserver@2020
      url: jdbc:mysql://81.70.7.10:3306/db_test?useSSL=false
      type: com.alibaba.druid.pool.DruidDataSource
      driverClassName: com.mysql.jdbc.Driver
      #监控统计拦截的filters
      filters: stat,wall
      #配置初始化大小/最小/最大
      initial-size: 1
      min-idle: 1
      max-active: 20
      #获取连接等待超时时间
      max-wait: 60000
      #间隔多久进行一次检测，检测需要关闭的空闲连接
      time-between-eviction-runs-millis: 60000
      #一个连接在池中最小生存的时间
      min-evictable-idle-time-millis: 300000
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      #打开PSCache，并指定每个连接上PSCache的大小。oracle设为true，mysql设为false。分库分表较多推荐设置为false
      pool-prepared-statements: false
      max-pool-prepared-statement-per-connection-size: 20
      validation-query: SELECT 1 FROM DUAL
    initialization-mode: always

  kafka:
    bootstrap-servers: 81.70.7.10:9092
  redis:
    host: 81.70.7.10
    port: 6379
    password: testserver@2020
    database: 0
  sleuth:
    web:
      client:
        enabled: true
    sampler:
      probability: 1.0 # 将采样比例设置为 1.0，也就是全部都需要。默认是 0.1
  zipkin:
    enabled: true
    base-url: http://localhost:9411 # 指定了 Zipkin 服务器的地址
    sender:
      type: kafka
    kafka:
      topic: zipkin

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    serviceUrl:
      defaultZone: http://81.70.7.10:8761/eureka/
  instance:
    prefer-ip-address: true
    #ip-address: 81.70.7.10
swagger:
  enable: true